{"version":3,"sources":["redux/actions/phonebookActions.js","redux/reducers/phonebookReducer.js","redux/reducers/rootReducer.js","redux/store.js","redux/operations/phonebookOperations.js","components/notification/NotificationStyled.js","components/notification/Notification.js","components/contactForm/ContactFormStyled.js","redux/selectors/phonebookSelectors.js","components/contactForm/ContactForm.js","components/contactList/ContactListStyled.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/AppStyled.js","components/loader/Loader.js","components/App.js","index.js"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","setFilter","items","createReducer","state","action","payload","_","filter","item","id","loading","error","phonebookReducer","combineReducers","rootReducer","contacts","store","configureStore","reducer","axios","defaults","baseURL","process","NotifWrap","styled","div","Notification","message","Form","form","Input","input","Button","button","getContacts","getFilter","getLoading","getError","getVisibleContacts","createSelector","name","toLowerCase","includes","initialState","number","alert","ContactForm","useSelector","dispatch","useDispatch","useState","setState","useEffect","get","then","data","result","Object","keys","map","key","catch","handleChange","e","target","value","prevState","onSubmit","preventDefault","contact","alertMessage","some","cont","post","type","placeholder","onChange","CSSTransition","in","classNames","onEntered","timeout","unmountOnExit","Wrapper","DelButton","ContactListItem","onDeleteContact","data-id","onClick","ContactList","handleDeleteContact","dataset","delete","removeContact","TransitionGroup","component","FilterWrapper","FilterInput","Filter","Container","override","css","Loader","color","size","App","isLoadingContacts","appear","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4db7bb9f.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContactRequest = createAction(\"phonebook/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"phonebook/addContactSuccess\");\r\nexport const addContactError = createAction(\"phonebook/addContactError\");\r\n\r\nexport const fetchContactsRequest = createAction(\"phonebook/fetchRequest\");\r\nexport const fetchContactsSuccess = createAction(\"phonebook/fetchSuccess\");\r\nexport const fetchContactsError = createAction(\"phonebook/fetchError\");\r\n\r\nexport const removeContactRequest = createAction(\"phonebook/removeRequest\");\r\nexport const removeContactSuccess = createAction(\"phonebook/removeSuccess\");\r\nexport const removeContactError = createAction(\"phonebook/removeError\");\r\n\r\nexport const setFilter = createAction(\"phonebook/setFilter\");\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  removeContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  setFilter,\r\n} from \"../actions/phonebookActions\";\r\n\r\n\r\nconst items = createReducer([], {\r\n  [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [fetchContactsSuccess]: (_, action) => [...action.payload],\r\n  [removeContactSuccess]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [setFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n\r\n\r\nconst error = createReducer(null, {\r\n  [addContactError]: (_, action) => action.payload,\r\n  [addContactSuccess]: () => null,\r\n\r\n  [fetchContactsError]: (_, action) => action.payload,\r\n  [fetchContactsSuccess]: () => null,\r\n\r\n  [removeContactError]: (_, action) => action.payload,\r\n  [removeContactSuccess]: () => null,\r\n})\r\n\r\nconst phonebookReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n\r\nexport default phonebookReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport phonebookReducer from \"./phonebookReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phonebookReducer,\r\n});\r\n\r\nexport default rootReducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\n// ====== redux toolkit ==============================\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport default store;\r\n\r\n// // ===================================================\r\n\r\n//  const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n//  export default store;\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  removeContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n} from \"../actions/phonebookActions\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const addContact = (contact) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts.json\", contact)\r\n    .then(({ data }) => {\r\n      dispatch(addContactSuccess({ ...contact, id: data.name }));\r\n    })\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts.json\")\r\n    .then(({ data }) => {\r\n      const result = Object.keys(data).map((key) => ({\r\n        id: key,\r\n        ...data[key],\r\n      }));\r\n      dispatch(fetchContactsSuccess(result));\r\n    })\r\n    .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const removeContact = (id) => (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}.json`)\r\n    .then(() => dispatch(removeContactSuccess(id)))\r\n    .catch((error) => dispatch(removeContactError(error)));\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const NotifWrap = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  background-color: #F1392D;\r\n  color: #fff;\r\n  font-size: 20px;\r\n  padding: 20px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  border-radius:5px;\r\n`;\r\n","import React from \"react\";\r\nimport { NotifWrap } from \"./NotificationStyled\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <NotifWrap>\r\n    <p>{message}</p>\r\n  </NotifWrap>\r\n);\r\n\r\nexport default Notification;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n  margin: 30px 0;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  margin: 5px 0 20px 0;\r\n  width: 100%;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  outline-color: #3645ab;\r\n\r\n  &::placeholder {\r\n    font-size: 14px;\r\n    color: #d8d8d8;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  background-color: #3645ab;\r\n\r\n    &:hover {\r\n    background-color: #273aba;\r\n    color: white;\r\n  }\r\n`;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getLoading = (state) => state.contacts.loading;\r\nexport const getError = (state) => state.contacts.error;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (items, filter) =>\r\n    items.filter((item) =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {addContact, fetchContacts} from \"../../redux/operations/phonebookOperations\";\r\n\r\nimport Notification from \"../notification/Notification\";\r\nimport { Form, Input, Button } from \"./ContactFormStyled\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { getContacts } from \"../../redux/selectors/phonebookSelectors\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  alert: false,\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = state;\r\n\r\n    if (!name || !number) {\r\n      return setState((prevState) => ({\r\n        ...prevState,\r\n        alert: true,\r\n        alertMessage: \"Please enter some contact information.\",\r\n      }));\r\n    }\r\n\r\n    contacts.some((cont) => cont.name.toLowerCase() === name.toLowerCase())\r\n      ? setState((prevState) => ({\r\n          ...prevState,\r\n          alert: true,\r\n          alertMessage: `${name} is already in contacts!`,\r\n        }))\r\n      : dispatch(addContact({ name, number }));\r\n\r\n    setState((prevState) => ({ ...prevState, name: \"\", number: \"\" }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <label>\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={state.name}\r\n            placeholder=\"Enter your name\"\r\n            onChange={handleChange}\r\n          ></Input>\r\n        </label>\r\n        <label>\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={state.number}\r\n            placeholder=\"123-45-678\"\r\n            onChange={handleChange}\r\n          ></Input>\r\n        </label>\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n      <CSSTransition\r\n        in={state.alert}\r\n        classNames=\"Notification\"\r\n        onEntered={() =>\r\n          setState((prevState) => ({ ...prevState, alert: false }))\r\n        }\r\n        timeout={3000}\r\n        unmountOnExit\r\n      >\r\n        <Notification message={state.alertMessage} />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"../contactForm/ContactFormStyled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px 15px;\r\n    background-color: white;\r\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n    border-radius: 3px;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n\r\n  .ContactList-item-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n\r\n  .ContactList-item-enter-active {\r\n    opacity: 1;\r\n    transform:translateX(0);\r\n    transition: all 250ms linear;\r\n  }\r\n\r\n  .ContactList-item-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n\r\n  .ContactList-item-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    transition: all 250ms linear;\r\n  }\r\n`;\r\n\r\nexport const DelButton = styled(Button)`\r\n  width:35px;\r\n  height:35px;\r\n  font-size: 20px;\r\n  background-color:#F1392D;\r\n  line-height: 17px;\r\n\r\n  &:hover{\r\n    background-color:#d71b0e\r\n  }\r\n`;\r\n\r\n","import React from \"react\";\r\nimport {DelButton} from \"../ContactListStyled\"\r\n\r\nconst ContactListItem = ({ contact:{id, name, number}, onDeleteContact}) => (\r\n  <li>\r\n    <p>\r\n      {name}: {number}\r\n    </p>\r\n    <DelButton type=\"button\" data-id={id} onClick={onDeleteContact}>&times;</DelButton>\r\n  </li>\r\n);\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport { setFilter } from \"../../redux/actions/phonebookActions\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { Wrapper } from \"./ContactListStyled\";\r\nimport { removeContact } from \"../../redux/operations/phonebookOperations\";\r\nimport { getVisibleContacts } from \"../../redux/selectors/phonebookSelectors\";\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteContact = (e) => {\r\n    const { id } = e.target.dataset;\r\n    dispatch(removeContact(id));\r\n    dispatch(setFilter(\"\"));\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <TransitionGroup component=\"ul\">\r\n        {contacts.map((contact) => (\r\n          <CSSTransition\r\n            key={contact.id}\r\n            timeout={250}\r\n            classNames=\"ContactList-item\"\r\n          >\r\n            <ContactListItem\r\n              contact={contact}\r\n              onDeleteContact={handleDeleteContact}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\nimport { Input } from \"../contactForm/ContactFormStyled\";\r\n\r\nexport const FilterWrapper = styled.div`\r\n  margin: 0 0 30px ;\r\n  padding: 5px 20px 10px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n`;\r\n\r\nexport const FilterInput = styled(Input)`\r\n  margin: 5px 0 0;\r\n`;\r\n\r\n\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/actions/phonebookActions\";\r\nimport { getFilter } from \"../../redux/selectors/phonebookSelectors\";\r\nimport { FilterWrapper, FilterInput } from \"./FilterStyled\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    dispatch(setFilter(value));\r\n  };\r\n\r\n  return (\r\n    <FilterWrapper>\r\n      <label>\r\n        Find contacts by name\r\n        <FilterInput\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          placeholder=\"Search...\"\r\n        ></FilterInput>\r\n      </label>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 50%;\r\n  margin: 0 auto;\r\n\r\n  h1 {\r\n    color: #3645ab;\r\n  }\r\n\r\n  .phonebook-title-appear {\r\n    transform: translateX(-100%);\r\n  }\r\n  .phonebook-title-appear-active {\r\n    transform: translateX(0);\r\n    transition: transform 500ms linear;\r\n  }\r\n\r\n\r\n  .filter-enter {\r\n    opacity: 0;\r\n    transform: scale(0.1);\r\n  }\r\n\r\n  .filter-enter-active {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n    transition: all 250ms linear;\r\n  }\r\n\r\n  .filter-exit {\r\n    opacity: 1;\r\n    transform: scale(0.1);\r\n  }\r\n\r\n  .filter-exit-active {\r\n    opacity: 0;\r\n    transform: scale(0);\r\n    transition: all 250ms linear;\r\n  }\r\n\r\n\r\n  .Notification-enter {\r\n    transform: translateX(100%);\r\n  }\r\n\r\n  .Notification-enter-active {\r\n    transform: translateX(0);\r\n    transition: transform 250ms linear;\r\n  }\r\n\r\n  .Notification-exit {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  .Notification-exit-active {\r\n    transform: translateX(300%);\r\n    transition: transform 250ms linear;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport DotLoader from \"react-spinners/DotLoader\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Loader = () => {\r\n  return <DotLoader color=\"#F1392D\" loading=\"true\" css={override} size={60} />;\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Container } from \"./AppStyled\";\nimport Loader from \"./loader/Loader\";\nimport Notification from \"./notification/Notification\";\nimport { getContacts, getError, getLoading } from \"../redux/selectors/phonebookSelectors\";\n\nconst App = () => {\n  const contacts = useSelector(getContacts);\n  const isLoadingContacts = useSelector(getLoading);\n  const error = useSelector(getError);\n  \n  return (\n    <Container>\n      <CSSTransition\n        in={true}\n        appear={true}\n        classNames=\"phonebook-title\"\n        timeout={500}\n        unmountOnExit\n      >\n        <h1>Phonebook</h1>\n      </CSSTransition>\n\n      <ContactForm />\n\n      <CSSTransition\n        in={contacts.length > 1}\n        classNames=\"filter\"\n        timeout={250}\n        unmountOnExit\n      >\n        <Filter />\n      </CSSTransition>\n\n      {isLoadingContacts && <Loader />}\n      <ContactList />\n      {!contacts.length && !isLoadingContacts && (\n        <p>There are no contacts in current list.</p>\n      )}\n      {error && <Notification message={error.message} />}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./components/App\";\nimport \"./base.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}